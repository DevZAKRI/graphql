export const projectsGraph = (data) => {
  const chartWidth = 600;
  const chartHeight = 300;
  const maxValue = Math.max(...data.map(d => d.value));
  const barWidth = chartWidth / data.length;
  const viewWidth = 650;
  const viewHeight = 400;
  const container = document.createElement("div");
  container.style.position = "relative";
  container.style.width = "100%";
  container.style.maxWidth = "800px"
  container.style.aspectRatio = "650 / 400";
  const tooltip = document.createElement("div");
  tooltip.style.position = "absolute";
  tooltip.style.pointerEvents = "none";
  tooltip.style.background = "rgba(0, 0, 0, 0.7)";
  tooltip.style.color = "white";
  tooltip.style.padding = "4px 8px";
  tooltip.style.borderRadius = "4px";
  tooltip.style.fontSize = "12px";
  tooltip.style.display = "none";
  tooltip.style.zIndex = "10";
  container.appendChild(tooltip);
  const svg = document.createElementNS("http://www.w3.org/2000/svg", "svg");
  svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
  svg.setAttribute("viewBox", `0 0 ${viewWidth} ${viewHeight}`);
  svg.setAttribute("preserveAspectRatio", "xMidYMid meet");
  svg.style.height = "100%";
  svg.style.fontFamily = "Roboto";
  svg.style.fontSize = "12px";
  container.appendChild(svg);
  const background = document.createElementNS("http://www.w3.org/2000/svg", "rect");
  background.setAttribute("fill", "#ffffff");
  background.setAttribute("x", "0");
  background.setAttribute("y", "0");
  background.setAttribute("width", viewWidth);
  background.setAttribute("height", viewHeight);
  svg.appendChild(background);
  const chartArea = document.createElementNS("http://www.w3.org/2000/svg", "rect");
  chartArea.setAttribute("fill", "none");
  chartArea.setAttribute("x", "10");
  chartArea.setAttribute("y", "47");
  chartArea.setAttribute("width", chartWidth);
  chartArea.setAttribute("height", chartHeight);
  svg.appendChild(chartArea);
  data.forEach((item, index) => {
    const barHeight = (item.value / maxValue) * chartHeight;
    const x = (index * barWidth) + 10;
    const y = 350- barHeight;
    const bar = document.createElementNS("http://www.w3.org/2000/svg", "rect");
    bar.setAttribute("x", x);
    bar.setAttribute("y", y);
    bar.setAttribute("width", barWidth - 10);
    bar.setAttribute("height", barHeight);
    bar.setAttribute("fill", "#94d13d");
    bar.style.cursor = "pointer";
    bar.addEventListener("mousemove", (e) => {
      const rect = svg.getBoundingClientRect();
      tooltip.style.display = "block";
      tooltip.style.left = `${e.clientX - rect.left + 10}px`;
      tooltip.style.top = `${e.clientY - rect.top - 30}px`;
      tooltip.textContent = `${item.name}: ${item.value}KB`;
    });
    bar.addEventListener("mouseleave", () => {
      tooltip.style.display = "none";
    });
    svg.appendChild(bar);
    const label = document.createElementNS("http://www.w3.org/2000/svg", "text");
    label.setAttribute("x", x + barWidth / 2);
    label.setAttribute("y", 350 + 15);
    label.setAttribute("text-anchor", "middle");
    label.textContent = item.name;
    svg.appendChild(label);
  });
  const title = document.createElementNS("http://www.w3.org/2000/svg", "text");
  title.setAttribute("x", viewWidth / 2);
  title.setAttribute("y", 24);
  title.setAttribute("text-anchor", "middle");
  title.setAttribute("style", "color: rgb(51, 51, 51); font-size: 18px;");
  title.textContent = "Projects";
  svg.appendChild(title);
  return container;
};
